// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Yapti.Services.OrderApi.DbContexts;

#nullable disable

namespace Yapti.Services.OrderApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240501144630_Orders")]
    partial class Orders
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Yapti.Services.OrderApi.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeadLine")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CategoryName = "Какая-то категория",
                            DeadLine = new DateTime(2024, 5, 1, 17, 46, 29, 646, DateTimeKind.Local).AddTicks(336),
                            Description = "Так как я больше не могу этим заниматься, псу 8 лет, Лабрадор",
                            ImageUrl = "",
                            Message = "",
                            Name = "Почистить зубы псу",
                            Price = 3000.0
                        },
                        new
                        {
                            OrderId = 2,
                            CategoryName = "Какая-то категория",
                            DeadLine = new DateTime(2024, 5, 1, 17, 46, 29, 646, DateTimeKind.Local).AddTicks(372),
                            Description = "На кухне и ванной",
                            ImageUrl = "",
                            Message = "",
                            Name = "Помыть полки",
                            Price = 1200.0
                        },
                        new
                        {
                            OrderId = 3,
                            CategoryName = "Какая-то категория",
                            DeadLine = new DateTime(2024, 5, 1, 17, 46, 29, 646, DateTimeKind.Local).AddTicks(381),
                            Description = "а то меня попросили, а я не умею",
                            ImageUrl = "",
                            Message = "",
                            Name = "Сделать макет сайта",
                            Price = 60000.0
                        },
                        new
                        {
                            OrderId = 4,
                            CategoryName = "Какая-то категория",
                            DeadLine = new DateTime(2024, 5, 1, 17, 46, 29, 646, DateTimeKind.Local).AddTicks(389),
                            Description = "Ключ у соседа",
                            ImageUrl = "",
                            Message = "",
                            Name = "Покормить кота по адресу",
                            Price = 15.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
